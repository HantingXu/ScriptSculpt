#include "ConstLetter.h"
#include <iostream>

Letter::Letter()
{
	transform.pos = vec2(0);
	transform.ori = vec2(0);
	transform.scale = vec2(0);
}

std::vector<vec2>& generateControlPoints(char letter) {
	std::vector<vec2> points;
	switch (letter) {
	case 'A':
		points = {
			vec2(328.0, 372.0), vec2(254.0, 372.0), vec2(211.0, 319.0), vec2(211.0, 256.0),
			vec2(211.0, 256.0), vec2(211.0, 191.0), vec2(254.0, 141.0), vec2(328.0, 141.0),
			vec2(328.0, 141.0), vec2(402.0, 141.0), vec2(445.0, 191.0), vec2(445.0, 256.0),
			vec2(445.0, 256.0), vec2(445.0, 319.0), vec2(402.0, 372.0), vec2(328.0, 372.0),
			vec2(621.0, 513.0), vec2(621.0, 342.0), vec2(621.0, 171.0), vec2(621.0, 0.0),
			vec2(621.0, 0.0), vec2(560.3333333333334, 0.0), vec2(499.6666666666667, 0.0), vec2(439.0, 0.0),
			vec2(439.0, 0.0), vec2(439.0, 19.0), vec2(439.0, 38.0), vec2(439.0, 57.0),
			vec2(439.0, 57.0), vec2(438.3333333333333, 57.0), vec2(437.6666666666667, 57.0), vec2(437.0, 57.0),
			vec2(437.0, 57.0), vec2(405.0, 6.0), vec2(342.0, -17.0), vec2(282.0, -17.0),
			vec2(282.0, -17.0), vec2(130.0, -17.0), vec2(23.0, 110.0), vec2(23.0, 257.0),
			vec2(23.0, 257.0), vec2(23.0, 404.0), vec2(128.0, 530.0), vec2(280.0, 530.0),
			vec2(280.0, 530.0), vec2(339.0, 530.0), vec2(401.0, 508.0), vec2(439.0, 463.0),
			vec2(439.0, 463.0), vec2(439.0, 479.6666666666667), vec2(439.0, 496.3333333333333), vec2(439.0, 513.0),
			vec2(439.0, 513.0), vec2(499.6666666666667, 513.0), vec2(560.3333333333334, 513.0), vec2(621.0, 513.0)
		};
		break;
	case 'B':
		points = {
			vec2(54.0, 0.0), vec2(54.0, 276.66666666666663), vec2(54.0, 553.3333333333333), vec2(54.0, 830.0),
			vec2(54.0, 830.0), vec2(114.66666666666666, 830.0), vec2(175.33333333333331, 830.0), vec2(236.0, 830.0),
			vec2(236.0, 830.0), vec2(236.0, 707.6666666666666), vec2(236.0, 585.3333333333334), vec2(236.0, 463.0),
			vec2(236.0, 463.0), vec2(275.0, 508.0), vec2(336.0, 530.0), vec2(395.0, 530.0),
			vec2(395.0, 530.0), vec2(547.0, 530.0), vec2(652.0, 404.0), vec2(652.0, 257.0),
			vec2(652.0, 257.0), vec2(652.0, 109.0), vec2(546.0, -17.0), vec2(393.0, -17.0),
			vec2(393.0, -17.0), vec2(333.0, -17.0), vec2(271.0, 6.0), vec2(238.0, 57.0),
			vec2(238.0, 57.0), vec2(237.33333333333334, 57.0), vec2(236.66666666666666, 57.0), vec2(236.0, 57.0),
			vec2(236.0, 57.0), vec2(236.0, 38.0), vec2(236.0, 19.0), vec2(236.0, 0.0),
			vec2(236.0, 0.0), vec2(175.33333333333334, 0.0), vec2(114.66666666666667, 0.0), vec2(54.0, 0.0),
			vec2(347.0, 372.0), vec2(273.0, 372.0), vec2(230.0, 319.0), vec2(230.0, 256.0),
			vec2(230.0, 256.0), vec2(230.0, 191.0), vec2(273.0, 141.0), vec2(347.0, 141.0),
			vec2(347.0, 141.0), vec2(421.0, 141.0), vec2(464.0, 191.0), vec2(464.0, 256.0),
			vec2(464.0, 256.0), vec2(464.0, 319.0), vec2(421.0, 372.0), vec2(347.0, 372.0)
		};
		break;
	case 'C':
		points = {
			vec2(430.0, 500.0), vec2(430.0, 448.6666666666667), vec2(430.0, 397.33333333333337), vec2(430.0, 346.0),
			vec2(430.0, 346.0), vec2(403.0, 366.0), vec2(371.0, 382.0), vec2(336.0, 382.0),
			vec2(336.0, 382.0), vec2(266.0, 382.0), vec2(211.0, 328.0), vec2(211.0, 257.0),
			vec2(211.0, 257.0), vec2(211.0, 183.0), vec2(264.0, 131.0), vec2(339.0, 131.0),
			vec2(339.0, 131.0), vec2(371.0, 131.0), vec2(406.0, 144.0), vec2(430.0, 166.0),
			vec2(430.0, 166.0), vec2(430.0, 114.66666666666667), vec2(430.0, 63.33333333333334), vec2(430.0, 12.0),
			vec2(430.0, 12.0), vec2(390.0, -8.0), vec2(346.0, -17.0), vec2(302.0, -17.0),
			vec2(302.0, -17.0), vec2(150.0, -17.0), vec2(23.0, 96.0), vec2(23.0, 251.0),
			vec2(23.0, 251.0), vec2(23.0, 416.0), vec2(149.0, 530.0), vec2(310.0, 530.0),
			vec2(310.0, 530.0), vec2(352.0, 530.0), vec2(394.0, 520.0), vec2(430.0, 500.0)
		};
		break;
	case 'D':
		points = {
			vec2(446.0, 0.0), vec2(446.0, 19.0), vec2(446.0, 38.0), vec2(446.0, 57.0),
			vec2(446.0, 57.0), vec2(445.3333333333333, 57.0), vec2(444.6666666666667, 57.0), vec2(444.0, 57.0),
			vec2(444.0, 57.0), vec2(412.0, 6.0), vec2(349.0, -17.0), vec2(289.0, -17.0),
			vec2(289.0, -17.0), vec2(137.0, -17.0), vec2(30.0, 110.0), vec2(30.0, 257.0),
			vec2(30.0, 257.0), vec2(30.0, 404.0), vec2(135.0, 530.0), vec2(287.0, 530.0),
			vec2(287.0, 530.0), vec2(346.0, 530.0), vec2(408.0, 508.0), vec2(446.0, 463.0),
			vec2(446.0, 463.0), vec2(446.0, 585.3333333333334), vec2(446.0, 707.6666666666666), vec2(446.0, 830.0),
			vec2(446.0, 830.0), vec2(506.6666666666667, 830.0), vec2(567.3333333333334, 830.0), vec2(628.0, 830.0),
			vec2(628.0, 830.0), vec2(628.0, 553.3333333333334), vec2(628.0, 276.66666666666674), vec2(628.0, 0.0),
			vec2(628.0, 0.0), vec2(567.3333333333334, 0.0), vec2(506.6666666666667, 0.0), vec2(446.0, 0.0),
			vec2(335.0, 372.0), vec2(261.0, 372.0), vec2(218.0, 319.0), vec2(218.0, 256.0),
			vec2(218.0, 256.0), vec2(218.0, 191.0), vec2(261.0, 141.0), vec2(335.0, 141.0),
			vec2(335.0, 141.0), vec2(409.0, 141.0), vec2(452.0, 191.0), vec2(452.0, 256.0),
			vec2(452.0, 256.0), vec2(452.0, 319.0), vec2(409.0, 372.0), vec2(335.0, 372.0)
		};
		break;
	case 'E':
		points = {
			vec2(207.0, 331.0), vec2(277.3333333333333, 331.0), vec2(347.66666666666663, 331.0), vec2(418.0, 331.0),
			vec2(418.0, 331.0), vec2(409.0, 380.0), vec2(364.0, 412.0), vec2(315.0, 412.0),
			vec2(315.0, 412.0), vec2(262.0, 412.0), vec2(218.0, 384.0), vec2(207.0, 331.0),
			vec2(587.0, 245.0), vec2(587.0, 238.66666666666666), vec2(587.0, 232.33333333333334), vec2(587.0, 226.0),
			vec2(587.0, 226.0), vec2(459.33333333333337, 226.0), vec2(331.6666666666667, 226.0), vec2(204.0, 226.0),
			vec2(204.0, 226.0), vec2(204.0, 152.0), vec2(243.0, 112.0), vec2(318.0, 112.0),
			vec2(318.0, 112.0), vec2(357.0, 112.0), vec2(385.0, 125.0), vec2(405.0, 159.0),
			vec2(405.0, 159.0), vec2(463.3333333333333, 159.0), vec2(521.6666666666666, 159.0), vec2(580.0, 159.0),
			vec2(580.0, 159.0), vec2(551.0, 38.0), vec2(436.0, -17.0), vec2(319.0, -17.0),
			vec2(319.0, -17.0), vec2(149.0, -17.0), vec2(22.0, 79.0), vec2(22.0, 256.0),
			vec2(22.0, 256.0), vec2(22.0, 427.0), vec2(139.0, 530.0), vec2(306.0, 530.0),
			vec2(306.0, 530.0), vec2(484.0, 530.0), vec2(587.0, 420.0), vec2(587.0, 245.0)
		};
		break;
	case 'F':
		points = {
			vec2(260.0, 363.0), vec2(260.0, 242.0), vec2(260.0, 121.0), vec2(260.0, 0.0),
			vec2(260.0, 0.0), vec2(199.33333333333334, 0.0), vec2(138.66666666666669, 0.0), vec2(78.0, 0.0),
			vec2(78.0, 0.0), vec2(78.0, 121.0), vec2(78.0, 242.0), vec2(78.0, 363.0),
			vec2(78.0, 363.0), vec2(56.66666666666667, 363.0), vec2(35.333333333333336, 363.0), vec2(14.0, 363.0),
			vec2(14.0, 363.0), vec2(14.0, 413.0), vec2(14.0, 463.0), vec2(14.0, 513.0),
			vec2(14.0, 513.0), vec2(35.33333333333333, 513.0), vec2(56.666666666666664, 513.0), vec2(78.0, 513.0),
			vec2(78.0, 513.0), vec2(78.0, 534.6666666666666), vec2(78.0, 556.3333333333334), vec2(78.0, 578.0),
			vec2(78.0, 578.0), vec2(78.0, 649.0), vec2(80.0, 701.0), vec2(130.0, 758.0),
			vec2(130.0, 758.0), vec2(175.0, 811.0), vec2(240.0, 840.0), vec2(309.0, 840.0),
			vec2(309.0, 840.0), vec2(337.0, 840.0), vec2(362.0, 835.0), vec2(387.0, 822.0),
			vec2(387.0, 822.0), vec2(387.0, 769.6666666666666), vec2(387.0, 717.3333333333334), vec2(387.0, 665.0),
			vec2(387.0, 665.0), vec2(366.0, 674.0), vec2(347.0, 682.0), vec2(323.0, 682.0),
			vec2(323.0, 682.0), vec2(276.0, 682.0), vec2(260.0, 654.0), vec2(260.0, 596.0),
			vec2(260.0, 596.0), vec2(260.0, 568.3333333333334), vec2(260.0, 540.6666666666666), vec2(260.0, 513.0),
			vec2(260.0, 513.0), vec2(302.3333333333333, 513.0), vec2(344.66666666666663, 513.0), vec2(387.0, 513.0),
			vec2(387.0, 513.0), vec2(387.0, 463.0), vec2(387.0, 413.0), vec2(387.0, 363.0),
			vec2(387.0, 363.0), vec2(344.6666666666667, 363.0), vec2(302.33333333333337, 363.0), vec2(260.0, 363.0)
		};
		break;
	case 'G':
		points = {
			vec2(623.0, 513.0), vec2(623.0, 358.6666666666667), vec2(623.0, 204.33333333333337), vec2(623.0, 50.0),
			vec2(623.0, 50.0), vec2(623.0, -168.0), vec2(515.0, -256.0), vec2(326.0, -256.0),
			vec2(326.0, -256.0), vec2(208.0, -256.0), vec2(50.0, -195.0), vec2(34.0, -60.0),
			vec2(34.0, -60.0), vec2(102.0, -60.0), vec2(170.0, -60.0), vec2(238.0, -60.0),
			vec2(238.0, -60.0), vec2(243.0, -78.0), vec2(256.0, -91.0), vec2(272.0, -99.0),
			vec2(272.0, -99.0), vec2(288.0, -107.0), vec2(307.0, -111.0), vec2(324.0, -111.0),
			vec2(324.0, -111.0), vec2(422.0, -111.0), vec2(441.0, -47.0), vec2(441.0, 36.0),
			vec2(441.0, 36.0), vec2(441.0, 44.0), vec2(441.0, 52.0), vec2(441.0, 60.0),
			vec2(441.0, 60.0), vec2(394.0, 13.0), vec2(346.0, -10.0), vec2(278.0, -10.0),
			vec2(278.0, -10.0), vec2(128.0, -10.0), vec2(25.0, 104.0), vec2(25.0, 252.0),
			vec2(25.0, 252.0), vec2(25.0, 402.0), vec2(131.0, 530.0), vec2(288.0, 530.0),
			vec2(288.0, 530.0), vec2(348.0, 530.0), vec2(403.0, 510.0), vec2(439.0, 459.0),
			vec2(439.0, 459.0), vec2(439.6666666666667, 459.0), vec2(440.3333333333333, 459.0), vec2(441.0, 459.0),
			vec2(441.0, 459.0), vec2(441.0, 477.0), vec2(441.0, 495.0), vec2(441.0, 513.0),
			vec2(441.0, 513.0), vec2(501.6666666666667, 513.0), vec2(562.3333333333334, 513.0), vec2(623.0, 513.0),
			vec2(330.0, 376.0), vec2(256.0, 376.0), vec2(213.0, 323.0), vec2(213.0, 260.0),
			vec2(213.0, 260.0), vec2(213.0, 195.0), vec2(256.0, 145.0), vec2(330.0, 145.0),
			vec2(330.0, 145.0), vec2(404.0, 145.0), vec2(447.0, 195.0), vec2(447.0, 260.0),
			vec2(447.0, 260.0), vec2(447.0, 323.0), vec2(404.0, 376.0), vec2(330.0, 376.0)
		};
		break;
	case 'H':
		points = {
			vec2(60.0, 830.0), vec2(120.66666666666666, 830.0), vec2(181.33333333333331, 830.0), vec2(242.0, 830.0),
			vec2(242.0, 830.0), vec2(242.0, 702.6666666666666), vec2(242.0, 575.3333333333334), vec2(242.0, 448.0),
			vec2(242.0, 448.0), vec2(242.66666666666666, 448.0), vec2(243.33333333333334, 448.0), vec2(244.0, 448.0),
			vec2(244.0, 448.0), vec2(286.0, 504.0), vec2(337.0, 530.0), vec2(408.0, 530.0),
			vec2(408.0, 530.0), vec2(538.0, 530.0), vec2(601.0, 444.0), vec2(601.0, 314.0),
			vec2(601.0, 314.0), vec2(601.0, 209.33333333333334), vec2(601.0, 104.66666666666669), vec2(601.0, 0.0),
			vec2(601.0, 0.0), vec2(540.3333333333334, 0.0), vec2(479.6666666666667, 0.0), vec2(419.0, 0.0),
			vec2(419.0, 0.0), vec2(419.0, 87.66666666666666), vec2(419.0, 175.33333333333331), vec2(419.0, 263.0),
			vec2(419.0, 263.0), vec2(419.0, 323.0), vec2(410.0, 385.0), vec2(337.0, 385.0),
			vec2(337.0, 385.0), vec2(265.0, 385.0), vec2(242.0, 323.0), vec2(242.0, 263.0),
			vec2(242.0, 263.0), vec2(242.0, 175.33333333333334), vec2(242.0, 87.66666666666669), vec2(242.0, 0.0),
			vec2(242.0, 0.0), vec2(181.33333333333334, 0.0), vec2(120.66666666666667, 0.0), vec2(60.0, 0.0),
			vec2(60.0, 0.0), vec2(60.0, 276.66666666666663), vec2(60.0, 553.3333333333333), vec2(60.0, 830.0)
		};
		break;
	case 'I':
		points = {
			vec2(242.0, 513.0), vec2(242.0, 342.0), vec2(242.0, 171.0), vec2(242.0, 0.0),
			vec2(242.0, 0.0), vec2(181.33333333333334, 0.0), vec2(120.66666666666667, 0.0), vec2(60.0, 0.0),
			vec2(60.0, 0.0), vec2(60.0, 171.0), vec2(60.0, 342.0), vec2(60.0, 513.0),
			vec2(60.0, 513.0), vec2(120.66666666666666, 513.0), vec2(181.33333333333331, 513.0), vec2(242.0, 513.0),
			vec2(151.0, 812.0), vec2(207.0, 812.0), vec2(253.0, 766.0), vec2(253.0, 710.0),
			vec2(253.0, 710.0), vec2(253.0, 654.0), vec2(207.0, 608.0), vec2(151.0, 608.0),
			vec2(151.0, 608.0), vec2(95.0, 608.0), vec2(49.0, 654.0), vec2(49.0, 710.0),
			vec2(49.0, 710.0), vec2(49.0, 766.0), vec2(95.0, 812.0), vec2(151.0, 812.0)
		};
		break;
		//J looks pretty much the same as I in the chosen font
	case 'J':
		points = {
			vec2(242.0, 513.0), vec2(242.0, 256.6666666666667), vec2(242.0, 0.33333333333337123), vec2(242.0, -256.0),
			vec2(242.0, -256.0), vec2(181.33333333333334, -256.0), vec2(120.66666666666667, -256.0), vec2(60.0, -256.0),
			vec2(60.0, -256.0), vec2(60.0, 0.3333333333333144), vec2(60.0, 256.66666666666663), vec2(60.0, 513.0),
			vec2(60.0, 513.0), vec2(120.66666666666666, 513.0), vec2(181.33333333333331, 513.0), vec2(242.0, 513.0),
			vec2(151.0, 812.0), vec2(207.0, 812.0), vec2(253.0, 766.0), vec2(253.0, 710.0),
			vec2(253.0, 710.0), vec2(253.0, 654.0), vec2(207.0, 608.0), vec2(151.0, 608.0),
			vec2(151.0, 608.0), vec2(95.0, 608.0), vec2(49.0, 654.0), vec2(49.0, 710.0),
			vec2(49.0, 710.0), vec2(49.0, 766.0), vec2(95.0, 812.0), vec2(151.0, 812.0)
		};
		break;
	case 'K':
		points = {
			vec2(242.0, 830.0), vec2(242.0, 662.6666666666667), vec2(242.0, 495.33333333333337), vec2(242.0, 328.0),
			vec2(242.0, 328.0), vec2(305.0, 389.6666666666667), vec2(368.0, 451.3333333333333), vec2(431.0, 513.0),
			vec2(431.0, 513.0), vec2(514.0, 513.0), vec2(597.0, 513.0), vec2(680.0, 513.0),
			vec2(680.0, 513.0), vec2(594.3333333333334, 434.0), vec2(508.6666666666667, 355.0), vec2(423.0, 276.0),
			vec2(423.0, 276.0), vec2(514.0, 184.0), vec2(605.0, 92.0), vec2(696.0, 0.0),
			vec2(696.0, 0.0), vec2(611.0, 0.0), vec2(526.0, 0.0), vec2(441.0, 0.0),
			vec2(441.0, 0.0), vec2(374.6666666666667, 69.66666666666666), vec2(308.33333333333337, 139.33333333333331), vec2(242.0, 209.0),
			vec2(242.0, 209.0), vec2(242.0, 139.33333333333334), vec2(242.0, 69.66666666666669), vec2(242.0, 0.0),
			vec2(242.0, 0.0), vec2(181.33333333333334, 0.0), vec2(120.66666666666667, 0.0), vec2(60.0, 0.0),
			vec2(60.0, 0.0), vec2(60.0, 276.66666666666663), vec2(60.0, 553.3333333333333), vec2(60.0, 830.0),
			vec2(60.0, 830.0), vec2(120.66666666666666, 830.0), vec2(181.33333333333331, 830.0), vec2(242.0, 830.0)
		};
		break;
	case 'L':
		points = {
			vec2(242.0, 830.0), vec2(242.0, 553.3333333333334), vec2(242.0, 276.66666666666674), vec2(242.0, 0.0),
			vec2(242.0, 0.0), vec2(181.33333333333334, 0.0), vec2(120.66666666666667, 0.0), vec2(60.0, 0.0),
			vec2(60.0, 0.0), vec2(60.0, 276.66666666666663), vec2(60.0, 553.3333333333333), vec2(60.0, 830.0),
			vec2(60.0, 830.0), vec2(120.66666666666666, 830.0), vec2(181.33333333333331, 830.0), vec2(242.0, 830.0)
		};
		break;
	case 'M':
		points = {
			vec2(242.0, 513.0), vec2(242.0, 491.6666666666667), vec2(242.0, 470.3333333333333), vec2(242.0, 449.0),
			vec2(242.0, 449.0), vec2(242.66666666666666, 449.0), vec2(243.33333333333334, 449.0), vec2(244.0, 449.0),
			vec2(244.0, 449.0), vec2(287.0, 506.0), vec2(340.0, 530.0), vec2(406.0, 530.0),
			vec2(406.0, 530.0), vec2(480.0, 530.0), vec2(544.0, 500.0), vec2(581.0, 432.0),
			vec2(581.0, 432.0), vec2(616.0, 496.0), vec2(685.0, 530.0), vec2(755.0, 530.0),
			vec2(755.0, 530.0), vec2(885.0, 530.0), vec2(930.0, 445.0), vec2(930.0, 327.0),
			vec2(930.0, 327.0), vec2(930.0, 218.0), vec2(930.0, 109.0), vec2(930.0, 0.0),
			vec2(930.0, 0.0), vec2(869.3333333333334, 0.0), vec2(808.6666666666666, 0.0), vec2(748.0, 0.0),
			vec2(748.0, 0.0), vec2(748.0, 81.66666666666666), vec2(748.0, 163.33333333333331), vec2(748.0, 245.0),
			vec2(748.0, 245.0), vec2(748.0, 298.0), vec2(750.0, 385.0), vec2(673.0, 385.0),
			vec2(673.0, 385.0), vec2(589.0, 385.0), vec2(586.0, 306.0), vec2(586.0, 245.0),
			vec2(586.0, 245.0), vec2(586.0, 163.33333333333334), vec2(586.0, 81.66666666666669), vec2(586.0, 0.0),
			vec2(586.0, 0.0), vec2(525.3333333333334, 0.0), vec2(464.6666666666667, 0.0), vec2(404.0, 0.0),
			vec2(404.0, 0.0), vec2(404.0, 81.66666666666666), vec2(404.0, 163.33333333333331), vec2(404.0, 245.0),
			vec2(404.0, 245.0), vec2(404.0, 302.0), vec2(404.0, 389.0), vec2(323.0, 389.0),
			vec2(323.0, 389.0), vec2(242.0, 389.0), vec2(242.0, 302.0), vec2(242.0, 245.0),
			vec2(242.0, 245.0), vec2(242.0, 163.33333333333334), vec2(242.0, 81.66666666666669), vec2(242.0, 0.0),
			vec2(242.0, 0.0), vec2(181.33333333333334, 0.0), vec2(120.66666666666667, 0.0), vec2(60.0, 0.0),
			vec2(60.0, 0.0), vec2(60.0, 171.0), vec2(60.0, 342.0), vec2(60.0, 513.0),
			vec2(60.0, 513.0), vec2(120.66666666666666, 513.0), vec2(181.33333333333331, 513.0), vec2(242.0, 513.0)
		};
		break;
	case 'N':
		points = {
			vec2(242.0, 513.0), vec2(242.0, 491.0), vec2(242.0, 469.0), vec2(242.0, 447.0),
			vec2(242.0, 447.0), vec2(242.66666666666666, 447.0), vec2(243.33333333333334, 447.0), vec2(244.0, 447.0),
			vec2(244.0, 447.0), vec2(286.0, 509.0), vec2(337.0, 530.0), vec2(408.0, 530.0),
			vec2(408.0, 530.0), vec2(546.0, 530.0), vec2(601.0, 443.0), vec2(601.0, 317.0),
			vec2(601.0, 317.0), vec2(601.0, 211.33333333333334), vec2(601.0, 105.66666666666669), vec2(601.0, 0.0),
			vec2(601.0, 0.0), vec2(540.3333333333334, 0.0), vec2(479.6666666666667, 0.0), vec2(419.0, 0.0),
			vec2(419.0, 0.0), vec2(419.0, 83.33333333333333), vec2(419.0, 166.66666666666666), vec2(419.0, 250.0),
			vec2(419.0, 250.0), vec2(419.0, 299.0), vec2(427.0, 385.0), vec2(337.0, 385.0),
			vec2(337.0, 385.0), vec2(263.0, 385.0), vec2(242.0, 330.0), vec2(242.0, 266.0),
			vec2(242.0, 266.0), vec2(242.0, 177.33333333333334), vec2(242.0, 88.66666666666669), vec2(242.0, 0.0),
			vec2(242.0, 0.0), vec2(181.33333333333334, 0.0), vec2(120.66666666666667, 0.0), vec2(60.0, 0.0),
			vec2(60.0, 0.0), vec2(60.0, 171.0), vec2(60.0, 342.0), vec2(60.0, 513.0),
			vec2(60.0, 513.0), vec2(120.66666666666666, 513.0), vec2(181.33333333333331, 513.0), vec2(242.0, 513.0)
		};
		break;
	case 'O':
		points = {
			vec2(331.0, 530.0), vec2(496.0, 530.0), vec2(640.0, 431.0), vec2(640.0, 256.0),
			vec2(640.0, 256.0), vec2(640.0, 82.0), vec2(496.0, -17.0), vec2(331.0, -17.0),
			vec2(331.0, -17.0), vec2(167.0, -17.0), vec2(22.0, 81.0), vec2(22.0, 256.0),
			vec2(22.0, 256.0), vec2(22.0, 431.0), vec2(166.0, 530.0), vec2(331.0, 530.0),
			vec2(331.0, 372.0), vec2(257.0, 372.0), vec2(214.0, 319.0), vec2(214.0, 256.0),
			vec2(214.0, 256.0), vec2(214.0, 191.0), vec2(257.0, 141.0), vec2(331.0, 141.0),
			vec2(331.0, 141.0), vec2(405.0, 141.0), vec2(448.0, 191.0), vec2(448.0, 256.0),
			vec2(448.0, 256.0), vec2(448.0, 319.0), vec2(405.0, 372.0), vec2(331.0, 372.0)
		};
		break;
	case 'P':
		points = {
			vec2(236.0, 513.0), vec2(236.0, 493.6666666666667), vec2(236.0, 474.3333333333333), vec2(236.0, 455.0),
			vec2(236.0, 455.0), vec2(236.66666666666666, 455.0), vec2(237.33333333333334, 455.0), vec2(238.0, 455.0),
			vec2(238.0, 455.0), vec2(271.0, 506.0), vec2(333.0, 530.0), vec2(393.0, 530.0),
			vec2(393.0, 530.0), vec2(546.0, 530.0), vec2(652.0, 402.0), vec2(652.0, 255.0),
			vec2(652.0, 255.0), vec2(652.0, 107.0), vec2(547.0, -17.0), vec2(395.0, -17.0),
			vec2(395.0, -17.0), vec2(336.0, -17.0), vec2(275.0, 4.0), vec2(236.0, 49.0),
			vec2(236.0, 49.0), vec2(236.0, -52.66666666666666), vec2(236.0, -154.33333333333331), vec2(236.0, -256.0),
			vec2(236.0, -256.0), vec2(175.33333333333334, -256.0), vec2(114.66666666666667, -256.0), vec2(54.0, -256.0),
			vec2(54.0, -256.0), vec2(54.0, 0.3333333333333144), vec2(54.0, 256.66666666666663), vec2(54.0, 513.0),
			vec2(54.0, 513.0), vec2(114.66666666666666, 513.0), vec2(175.33333333333331, 513.0), vec2(236.0, 513.0),
			vec2(347.0, 372.0), vec2(273.0, 372.0), vec2(230.0, 319.0), vec2(230.0, 256.0),
			vec2(230.0, 256.0), vec2(230.0, 191.0), vec2(273.0, 141.0), vec2(347.0, 141.0),
			vec2(347.0, 141.0), vec2(421.0, 141.0), vec2(464.0, 191.0), vec2(464.0, 256.0),
			vec2(464.0, 256.0), vec2(464.0, 319.0), vec2(421.0, 372.0), vec2(347.0, 372.0)
		};
		break;
	case 'Q':
		points = {
			vec2(628.0, 513.0), vec2(628.0, 256.6666666666667), vec2(628.0, 0.33333333333337123), vec2(628.0, -256.0),
			vec2(628.0, -256.0), vec2(567.3333333333334, -256.0), vec2(506.6666666666667, -256.0), vec2(446.0, -256.0),
			vec2(446.0, -256.0), vec2(446.0, -154.33333333333334), vec2(446.0, -52.666666666666686), vec2(446.0, 49.0),
			vec2(446.0, 49.0), vec2(408.0, 4.0), vec2(346.0, -17.0), vec2(287.0, -17.0),
			vec2(287.0, -17.0), vec2(134.0, -17.0), vec2(30.0, 107.0), vec2(30.0, 255.0),
			vec2(30.0, 255.0), vec2(30.0, 401.0), vec2(137.0, 530.0), vec2(289.0, 530.0),
			vec2(289.0, 530.0), vec2(349.0, 530.0), vec2(412.0, 506.0), vec2(444.0, 455.0),
			vec2(444.0, 455.0), vec2(444.6666666666667, 455.0), vec2(445.3333333333333, 455.0), vec2(446.0, 455.0),
			vec2(446.0, 455.0), vec2(446.0, 474.3333333333333), vec2(446.0, 493.6666666666667), vec2(446.0, 513.0),
			vec2(446.0, 513.0), vec2(506.6666666666667, 513.0), vec2(567.3333333333334, 513.0), vec2(628.0, 513.0),
			vec2(335.0, 372.0), vec2(261.0, 372.0), vec2(218.0, 319.0), vec2(218.0, 256.0),
			vec2(218.0, 256.0), vec2(218.0, 191.0), vec2(261.0, 141.0), vec2(335.0, 141.0),
			vec2(335.0, 141.0), vec2(409.0, 141.0), vec2(452.0, 191.0), vec2(452.0, 256.0),
			vec2(452.0, 256.0), vec2(452.0, 319.0), vec2(409.0, 372.0), vec2(335.0, 372.0)
		};
		break;
	case 'R':
		points = {
			vec2(242.0, 513.0), vec2(242.0, 485.0), vec2(242.0, 457.0), vec2(242.0, 429.0),
			vec2(242.0, 429.0), vec2(242.66666666666666, 429.0), vec2(243.33333333333334, 429.0), vec2(244.0, 429.0),
			vec2(244.0, 429.0), vec2(279.0, 492.0), vec2(339.0, 520.0), vec2(410.0, 520.0),
			vec2(410.0, 520.0), vec2(421.6666666666667, 520.0), vec2(433.3333333333333, 520.0), vec2(445.0, 520.0),
			vec2(445.0, 520.0), vec2(445.0, 461.6666666666667), vec2(445.0, 403.33333333333337), vec2(445.0, 345.0),
			vec2(445.0, 345.0), vec2(420.0, 359.0), vec2(396.0, 362.0), vec2(368.0, 362.0),
			vec2(368.0, 362.0), vec2(267.0, 362.0), vec2(242.0, 295.0), vec2(242.0, 207.0),
			vec2(242.0, 207.0), vec2(242.0, 138.0), vec2(242.0, 69.0), vec2(242.0, 0.0),
			vec2(242.0, 0.0), vec2(181.33333333333334, 0.0), vec2(120.66666666666667, 0.0), vec2(60.0, 0.0),
			vec2(60.0, 0.0), vec2(60.0, 171.0), vec2(60.0, 342.0), vec2(60.0, 513.0),
			vec2(60.0, 513.0), vec2(120.66666666666666, 513.0), vec2(181.33333333333331, 513.0), vec2(242.0, 513.0)
		};
		break;
	case 'S':
		points = {
			vec2(460.0, 497.0), vec2(439.6666666666667, 458.3333333333333), vec2(419.3333333333333, 419.6666666666667), vec2(399.0, 381.0),
			vec2(399.0, 381.0), vec2(371.0, 396.0), vec2(332.0, 406.0), vec2(301.0, 406.0),
			vec2(301.0, 406.0), vec2(280.0, 406.0), vec2(244.0, 397.0), vec2(244.0, 371.0),
			vec2(244.0, 371.0), vec2(244.0, 336.0), vec2(301.0, 331.0), vec2(326.0, 326.0),
			vec2(326.0, 326.0), vec2(411.0, 309.0), vec2(475.0, 269.0), vec2(475.0, 174.0),
			vec2(475.0, 174.0), vec2(475.0, 39.0), vec2(352.0, -17.0), vec2(233.0, -17.0),
			vec2(233.0, -17.0), vec2(160.0, -17.0), vec2(88.0, 4.0), vec2(26.0, 42.0),
			vec2(26.0, 42.0), vec2(48.0, 84.33333333333333), vec2(70.0, 126.66666666666666), vec2(92.0, 169.0),
			vec2(92.0, 169.0), vec2(129.0, 143.0), vec2(191.0, 117.0), vec2(236.0, 117.0),
			vec2(236.0, 117.0), vec2(259.0, 117.0), vec2(293.0, 128.0), vec2(293.0, 156.0),
			vec2(293.0, 156.0), vec2(293.0, 196.0), vec2(236.0, 198.0), vec2(179.0, 213.0),
			vec2(179.0, 213.0), vec2(122.0, 228.0), vec2(65.0, 256.0), vec2(65.0, 348.0),
			vec2(65.0, 348.0), vec2(65.0, 474.0), vec2(179.0, 530.0), vec2(291.0, 530.0),
			vec2(291.0, 530.0), vec2(349.0, 530.0), vec2(407.0, 521.0), vec2(460.0, 497.0)
		};
		break;
	case 'T':
		points = {
			vec2(259.0, 363.0), vec2(259.0, 242.0), vec2(259.0, 121.0), vec2(259.0, 0.0),
			vec2(259.0, 0.0), vec2(198.33333333333334, 0.0), vec2(137.66666666666669, 0.0), vec2(77.0, 0.0),
			vec2(77.0, 0.0), vec2(77.0, 121.0), vec2(77.0, 242.0), vec2(77.0, 363.0),
			vec2(77.0, 363.0), vec2(57.333333333333336, 363.0), vec2(37.66666666666667, 363.0), vec2(18.0, 363.0),
			vec2(18.0, 363.0), vec2(18.0, 413.0), vec2(18.0, 463.0), vec2(18.0, 513.0),
			vec2(18.0, 513.0), vec2(37.666666666666664, 513.0), vec2(57.33333333333333, 513.0), vec2(77.0, 513.0),
			vec2(77.0, 513.0), vec2(77.0, 564.3333333333334), vec2(77.0, 615.6666666666666), vec2(77.0, 667.0),
			vec2(77.0, 667.0), vec2(137.66666666666666, 667.0), vec2(198.33333333333331, 667.0), vec2(259.0, 667.0),
			vec2(259.0, 667.0), vec2(259.0, 615.6666666666666), vec2(259.0, 564.3333333333334), vec2(259.0, 513.0),
			vec2(259.0, 513.0), vec2(293.3333333333333, 513.0), vec2(327.66666666666663, 513.0), vec2(362.0, 513.0),
			vec2(362.0, 513.0), vec2(362.0, 463.0), vec2(362.0, 413.0), vec2(362.0, 363.0),
			vec2(362.0, 363.0), vec2(327.6666666666667, 363.0), vec2(293.33333333333337, 363.0), vec2(259.0, 363.0)
		};
		break;
	case 'U':
		points = {
			vec2(57.0, 513.0), vec2(117.66666666666666, 513.0), vec2(178.33333333333331, 513.0), vec2(239.0, 513.0),
			vec2(239.0, 513.0), vec2(239.0, 421.6666666666667), vec2(239.0, 330.33333333333337), vec2(239.0, 239.0),
			vec2(239.0, 239.0), vec2(239.0, 174.0), vec2(255.0, 128.0), vec2(330.0, 128.0),
			vec2(330.0, 128.0), vec2(405.0, 128.0), vec2(421.0, 174.0), vec2(421.0, 239.0),
			vec2(421.0, 239.0), vec2(421.0, 330.3333333333333), vec2(421.0, 421.66666666666663), vec2(421.0, 513.0),
			vec2(421.0, 513.0), vec2(481.6666666666667, 513.0), vec2(542.3333333333334, 513.0), vec2(603.0, 513.0),
			vec2(603.0, 513.0), vec2(603.0, 410.0), vec2(603.0, 307.0), vec2(603.0, 204.0),
			vec2(603.0, 204.0), vec2(603.0, 35.0), vec2(484.0, -17.0), vec2(330.0, -17.0),
			vec2(330.0, -17.0), vec2(176.0, -17.0), vec2(57.0, 35.0), vec2(57.0, 204.0),
			vec2(57.0, 204.0), vec2(57.0, 307.0), vec2(57.0, 410.0), vec2(57.0, 513.0)
		};
		break;
	case 'V':
		points = {
			vec2(189.0, 513.0), vec2(230.0, 425.33333333333337), vec2(271.0, 337.6666666666667), vec2(312.0, 250.0),
			vec2(312.0, 250.0), vec2(352.6666666666667, 337.66666666666663), vec2(393.3333333333333, 425.3333333333333), vec2(434.0, 513.0),
			vec2(434.0, 513.0), vec2(502.0, 513.0), vec2(570.0, 513.0), vec2(638.0, 513.0),
			vec2(638.0, 513.0), vec2(548.6666666666666, 342.0), vec2(459.33333333333337, 171.0), vec2(370.0, 0.0),
			vec2(370.0, 0.0), vec2(331.3333333333333, 0.0), vec2(292.6666666666667, 0.0), vec2(254.0, 0.0),
			vec2(254.0, 0.0), vec2(164.33333333333334, 171.0), vec2(74.66666666666669, 342.0), vec2(-15.0, 513.0),
			vec2(-15.0, 513.0), vec2(53.0, 513.0), vec2(121.0, 513.0), vec2(189.0, 513.0)
		};
		break;
	case 'W':
		points = {
			vec2(187.0, 513.0), vec2(229.66666666666666, 420.33333333333337), vec2(272.3333333333333, 327.6666666666667), vec2(315.0, 235.0),
			vec2(315.0, 235.0), vec2(358.0, 327.66666666666663), vec2(401.0, 420.3333333333333), vec2(444.0, 513.0),
			vec2(444.0, 513.0), vec2(480.0, 513.0), vec2(516.0, 513.0), vec2(552.0, 513.0),
			vec2(552.0, 513.0), vec2(595.0, 420.33333333333337), vec2(638.0, 327.6666666666667), vec2(681.0, 235.0),
			vec2(681.0, 235.0), vec2(724.0, 327.66666666666663), vec2(767.0, 420.3333333333333), vec2(810.0, 513.0),
			vec2(810.0, 513.0), vec2(877.0, 513.0), vec2(944.0, 513.0), vec2(1011.0, 513.0),
			vec2(1011.0, 513.0), vec2(921.6666666666666, 342.0), vec2(832.3333333333334, 171.0), vec2(743.0, 0.0),
			vec2(743.0, 0.0), vec2(703.6666666666666, 0.0), vec2(664.3333333333334, 0.0), vec2(625.0, 0.0),
			vec2(625.0, 0.0), vec2(582.6666666666666, 93.66666666666666), vec2(540.3333333333334, 187.33333333333331), vec2(498.0, 281.0),
			vec2(498.0, 281.0), vec2(455.6666666666667, 187.33333333333334), vec2(413.33333333333337, 93.66666666666669), vec2(371.0, 0.0),
			vec2(371.0, 0.0), vec2(331.6666666666667, 0.0), vec2(292.33333333333337, 0.0), vec2(253.0, 0.0),
			vec2(253.0, 0.0), vec2(163.66666666666669, 171.0), vec2(74.33333333333334, 342.0), vec2(-15.0, 513.0),
			vec2(-15.0, 513.0), vec2(52.33333333333333, 513.0), vec2(119.66666666666666, 513.0), vec2(187.0, 513.0)
		};
		break;
	case 'X':
		points = {
			vec2(241.0, 278.0), vec2(171.66666666666669, 356.3333333333333), vec2(102.33333333333334, 434.66666666666663), vec2(33.0, 513.0),
			vec2(33.0, 513.0), vec2(110.0, 513.0), vec2(187.0, 513.0), vec2(264.0, 513.0),
			vec2(264.0, 513.0), vec2(294.6666666666667, 477.6666666666667), vec2(325.3333333333333, 442.33333333333337), vec2(356.0, 407.0),
			vec2(356.0, 407.0), vec2(386.6666666666667, 442.3333333333333), vec2(417.3333333333333, 477.66666666666663), vec2(448.0, 513.0),
			vec2(448.0, 513.0), vec2(526.3333333333334, 513.0), vec2(604.6666666666666, 513.0), vec2(683.0, 513.0),
			vec2(683.0, 513.0), vec2(612.3333333333334, 434.6666666666667), vec2(541.6666666666667, 356.33333333333337), vec2(471.0, 278.0),
			vec2(471.0, 278.0), vec2(556.3333333333334, 185.33333333333334), vec2(641.6666666666666, 92.66666666666669), vec2(727.0, 0.0),
			vec2(727.0, 0.0), vec2(647.3333333333334, 0.0), vec2(567.6666666666667, 0.0), vec2(488.0, 0.0),
			vec2(488.0, 0.0), vec2(444.0, 50.666666666666664), vec2(400.0, 101.33333333333333), vec2(356.0, 152.0),
			vec2(356.0, 152.0), vec2(312.0, 101.33333333333334), vec2(268.0, 50.66666666666667), vec2(224.0, 0.0),
			vec2(224.0, 0.0), vec2(144.33333333333334, 0.0), vec2(64.66666666666669, 0.0), vec2(-15.0, 0.0),
			vec2(-15.0, 0.0), vec2(70.33333333333334, 92.66666666666667), vec2(155.66666666666666, 185.33333333333334), vec2(241.0, 278.0)
		};
		break;
	case 'Y':
		points = {
			vec2(233.0, 70.0), vec2(150.33333333333334, 217.66666666666666), vec2(67.66666666666669, 365.3333333333333), vec2(-15.0, 513.0),
			vec2(-15.0, 513.0), vec2(55.0, 513.0), vec2(125.0, 513.0), vec2(195.0, 513.0),
			vec2(195.0, 513.0), vec2(240.66666666666666, 425.33333333333337), vec2(286.3333333333333, 337.6666666666667), vec2(332.0, 250.0),
			vec2(332.0, 250.0), vec2(376.6666666666667, 337.66666666666663), vec2(421.3333333333333, 425.3333333333333), vec2(466.0, 513.0),
			vec2(466.0, 513.0), vec2(535.0, 513.0), vec2(604.0, 513.0), vec2(673.0, 513.0),
			vec2(673.0, 513.0), vec2(536.0, 256.6666666666667), vec2(399.0, 0.33333333333337123), vec2(262.0, -256.0),
			vec2(262.0, -256.0), vec2(194.0, -256.0), vec2(126.0, -256.0), vec2(58.0, -256.0),
			vec2(58.0, -256.0), vec2(116.3333333333333, -147.3333333333333), vec2(174.6666666666667, -38.6666666666667), vec2(233.0, 70.0)
		};
		break;
	case 'Z':
		points = {
			vec2(312.0, 151.0), vec2(384.0, 151.0), vec2(456.0, 151.0), vec2(528.0, 151.0),
			vec2(528.0, 151.0), vec2(528.0, 100.66666666666667), vec2(528.0, 50.33333333333334), vec2(528.0, 0.0),
			vec2(528.0, 0.0), vec2(354.6666666666667, 0.0), vec2(181.33333333333337, 0.0), vec2(8.0, 0.0),
			vec2(8.0, 0.0), vec2(88.33333333333333, 120.66666666666666), vec2(168.66666666666666, 241.33333333333331), vec2(249.0, 362.0),
			vec2(249.0, 362.0), vec2(179.33333333333334, 362.0), vec2(109.66666666666669, 362.0), vec2(40.0, 362.0),
			vec2(40.0, 362.0), vec2(40.0, 412.3333333333333), vec2(40.0, 462.66666666666663), vec2(40.0, 513.0),
			vec2(40.0, 513.0), vec2(210.66666666666666, 513.0), vec2(381.3333333333333, 513.0), vec2(552.0, 513.0),
			vec2(552.0, 513.0), vec2(472.0, 392.3333333333333), vec2(392.0, 271.6666666666667), vec2(312.0, 151.0)
		};
		break;
	}
	return points;
}

std::vector<Anchor>& generateAnchorPoints(char letter) {
	//TODO
	std::vector<Anchor> anchors;
	switch (letter) {
		case 'A':
			anchors = {};
			break;
	}
	return anchors;
}

Letter::Letter(char letter)
{
	controlPoints = generateControlPoints(letter);
	anchors = generateAnchorPoints(letter);
}

Letter::~Letter() {
	anchors.clear();
}

ConstLetters::ConstLetters() {
	for (int i = 65; i <= 90; i++) {
		const Letter l = Letter(static_cast<char>(i));
		letters.push_back(l);
	}
};

ConstLetters::~ConstLetters() {
	letters.clear();
}

const Letter& ConstLetters::getLetter(char letter) {
	int index = static_cast<int>(letter) - 65;
	return letters[index];
}